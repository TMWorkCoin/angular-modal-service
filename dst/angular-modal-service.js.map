{"version":3,"sources":["webpack:///webpack/bootstrap be008a8bab30b1e11de0","webpack:///./src/angular-modal-service.js"],"names":["module","angular","factory","$animate","$document","$compile","$controller","$http","$rootScope","$q","$templateRequest","$timeout","ModalService","self","getTemplate","template","templateUrl","deferred","defer","resolve","then","error","reject","promise","appendChild","parent","child","children","length","enter","showModal","options","$broadcast","controllerName","controller","body","element","modalScope","scope","$new","rootScopeOnClose","$on","cleanUpClose","closeDeferred","closedDeferred","inputs","$scope","close","result","delay","undefined","extend","linkFn","modalElement","$element","controllerObjBefore","controllerAs","modalController","appendElement","modal","closed","leave","$destroy"],"mappings":"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","file":"angular-modal-service.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap be008a8bab30b1e11de0\n **/","'use strict';\n\nlet module = angular.module('angularModalService', []);\n\nmodule.factory('ModalService', ['$animate', '$document', '$compile', '$controller', '$http', '$rootScope', '$q', '$templateRequest', '$timeout',\n  function($animate, $document, $compile, $controller, $http, $rootScope, $q, $templateRequest, $timeout) {\n\n  function ModalService() {\n\n    var self = this;\n\n    //  Returns a promise which gets the template, either\n    //  from the template parameter or via a request to the\n    //  template url parameter.\n    var getTemplate = function(template, templateUrl) {\n      var deferred = $q.defer();\n      if (template) {\n        deferred.resolve(template);\n      } else if (templateUrl) {\n        $templateRequest(templateUrl, true)\n          .then(function(template) {\n            deferred.resolve(template);\n          }, function(error) {\n            deferred.reject(error);\n          });\n      } else {\n        deferred.reject(\"No template or templateUrl has been specified.\");\n      }\n      return deferred.promise;\n    };\n\n    //  Adds an element to the DOM as the last child of its container\n    //  like append, but uses $animate to handle animations. Returns a\n    //  promise that is resolved once all animation is complete.\n    var appendChild = function(parent, child) {\n      var children = parent.children();\n      if (children.length > 0) {\n        return $animate.enter(child, parent, children[children.length - 1]);\n      }\n      return $animate.enter(child, parent);\n    };\n\n    self.showModal = function(options) {\n      $rootScope.$broadcast('modal-open', {controllerName: options.controller});\n      //  Get the body of the document, we'll add the modal to this.\n      var body = angular.element($document[0].body);\n\n      //  Create a deferred we'll resolve when the modal is ready.\n      var deferred = $q.defer();\n\n      //  Validate the input parameters.\n      var controllerName = options.controller;\n      if (!controllerName) {\n        deferred.reject(\"No controller has been specified.\");\n        return deferred.promise;\n      }\n\n      //  Get the actual html of the template.\n      getTemplate(options.template, options.templateUrl)\n        .then(function(template) {\n\n          //  Create a new scope for the modal.\n          var modalScope = (options.scope || $rootScope).$new();\n          var rootScopeOnClose = $rootScope.$on('$locationChangeSuccess', cleanUpClose);\n\n          //  Create the inputs object to the controller - this will include\n          //  the scope, as well as all inputs provided.\n          //  We will also create a deferred that is resolved with a provided\n          //  close function. The controller can then call 'close(result)'.\n          //  The controller can also provide a delay for closing - this is\n          //  helpful if there are closing animations which must finish first.\n          var closeDeferred = $q.defer();\n          var closedDeferred = $q.defer();\n          var inputs = {\n            $scope: modalScope,\n            close: function(result, delay) {\n              if (delay === undefined || delay === null) delay = 0;\n              $timeout(function() {\n\n                $rootScope.$broadcast('modal-close',{controllerName: options.controller});\n\n                cleanUpClose(result);\n\n              }, delay);\n            }\n          };\n\n          //  If we have provided any inputs, pass them to the controller.\n          if (options.inputs) angular.extend(inputs, options.inputs);\n\n          //  Compile then link the template element, building the actual element.\n          //  Set the $element on the inputs so that it can be injected if required.\n          var linkFn = $compile(template);\n          var modalElement = linkFn(modalScope);\n          inputs.$element = modalElement;\n\n          //  Create the controller, explicitly specifying the scope to use.\n          var controllerObjBefore = modalScope[options.controllerAs];\n          var modalController = $controller(options.controller, inputs, false, options.controllerAs);\n\n          if (options.controllerAs && controllerObjBefore) {\n            angular.extend(modalController, controllerObjBefore);\n          }\n\n          //  Finally, append the modal to the dom.\n          if (options.appendElement) {\n            // append to custom append element\n            appendChild(options.appendElement, modalElement);\n          } else {\n            // append to body when no custom append element is specified\n            appendChild(body, modalElement);\n          }\n\n          //  We now have a modal object...\n          var modal = {\n            controller: modalController,\n            scope: modalScope,\n            element: modalElement,\n            close: closeDeferred.promise,\n            closed: closedDeferred.promise\n          };\n\n          //  ...which is passed to the caller via the promise.\n          deferred.resolve(modal);\n\n          function cleanUpClose(result) {\n\n            //  Resolve the 'close' promise.\n            closeDeferred.resolve(result);\n\n            //  Let angular remove the element and wait for animations to finish.\n            $animate.leave(modalElement)\n                    .then(function () {\n                      //  Resolve the 'closed' promise.\n                      closedDeferred.resolve(result);\n\n                      //  We can now clean up the scope\n                      modalScope.$destroy();\n\n                      //  Unless we null out all of these objects we seem to suffer\n                      //  from memory leaks, if anyone can explain why then I'd\n                      //  be very interested to know.\n                      inputs.close = null;\n                      deferred = null;\n                      closeDeferred = null;\n                      modal = null;\n                      inputs = null;\n                      modalElement = null;\n                      modalScope = null;\n                    });\n\n            // remove event watcher\n            rootScopeOnClose && rootScopeOnClose();\n          }\n\n        })\n        .then(null, function(error) { // 'catch' doesn't work in IE8.\n          deferred.reject(error);\n        });\n\n      return deferred.promise;\n    };\n\n  }\n\n  return new ModalService();\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/angular-modal-service.js\n **/"],"sourceRoot":""}